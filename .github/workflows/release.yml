name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  # pull_request:
  #   branches:
  #     - 'master'
  workflow_dispatch:

jobs:
  publish:
    runs-on: [windows-latest]
    permissions:
      contents: write
      discussions: write
    strategy:
      matrix:
        architecture:
          - win-x64
          - win-arm64
    env:
      release: 'fnorm-${{ github.ref_name }}-${{ matrix.architecture }}'
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Publish ${{ matrix.architecture }} (Windows)
        if: matrix.architecture == 'win-x64' || matrix.architecture == 'win-arm64'
        run: dotnet publish ./src/FixNormalization -c Release -o ./pub/${{ matrix.architecture }} -r ${{ matrix.architecture }} --no-self-contained -v normal

      - name: Publish ${{ matrix.architecture }} (Others)
        if: matrix.architecture != 'win-x64' && matrix.architecture != 'win-arm64'
        run: dotnet publish ./src/FixNormalization -c Release -o ./pub/${{ matrix.architecture }} -r ${{ matrix.architecture }} --self-contained -v normal

      - name: Remove unnecessary files
        run: |
          pushd
          Set-Location -Path ./pub/${{ matrix.architecture }}
          Get-ChildItem -Filter *.pdb | Remove-Item -Force
          Get-ChildItem -Filter *.deps.json -Recurse | Remove-Item
          Get-ChildItem -Filter *.runtimeconfig.json -Recurse | Remove-Item
          popd
      - name: Archive release ${{ env.release }}
        uses: thedoctor0/zip-release@master
        with:
          filename: './${{ env.release }}.zip'
          directory: './pub/${{ matrix.architecture }}'
      - name: Upload release ${{ env.release }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.release }}-binary
          path: ./${{ env.release }}.zip
  create-release:
    name: Create Release on GitHub
    needs: [publish]
    runs-on: windows-latest
    permissions:
      contents: write
      discussions: write
    steps:

      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: fnorm-${{ github.ref_name }}-*-binary
          path: result

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            result/*.zip
          make_latest: ${{ !contains(github.ref_name, '-') }}
          prerelease: ${{ contains(github.ref_name, '-') }}


